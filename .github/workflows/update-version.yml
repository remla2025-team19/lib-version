name: Update version from model-service
on:
  repository_dispatch:
    types: [version-update]

permissions:
  contents: write

jobs:
  update-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Extract version number
        id: version
        run: |
          # Remove 'v' prefix if present
          VERSION="${{ github.event.client_payload.version }}"
          VERSION=${VERSION#v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Updating to version: $VERSION"

      - name: Update __init__.py version
        run: |
          sed -i 's/__version__ = ".*"/__version__ = "${{ steps.version.outputs.version }}"/' src/lib_version/__init__.py
          echo "Updated __init__.py with version ${{ steps.version.outputs.version }}"

      - name: Update setup.py version
        run: |
          sed -i 's/version=".*"/version="${{ steps.version.outputs.version }}"/' setup.py
          echo "Updated setup.py with version ${{ steps.version.outputs.version }}"

      - name: Verify changes
        run: |
          echo "Current __init__.py content:"
          cat src/lib_version/__init__.py
          echo "Current setup.py content:"
          cat setup.py

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Check if there are changes to commit
          if [[ -n "$(git diff --exit-code)" ]]; then
            git add src/lib_version/__init__.py setup.py
            git commit -m "Auto-update version to ${{ steps.version.outputs.version }} from model-service"
            git push
            echo "Changes committed and pushed"
          else
            echo "No changes to commit"
          fi

      - name: Create release tag
        run: |
          git tag "v${{ steps.version.outputs.version }}"
          git push origin "v${{ steps.version.outputs.version }}"
          echo "Created and pushed tag v${{ steps.version.outputs.version }}"
